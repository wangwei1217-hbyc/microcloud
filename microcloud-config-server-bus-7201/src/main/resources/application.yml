server:
  port: 7201
spring:
  application:
    name: microcloud-config-server-bus
  rabbitmq:
    host: 192.168.109.128
    port: 5672
    username: wangwei
    password: wangwei
  cloud: # 进行SpringCloud的相关配置
    config: # 进行SpringCloudConfig的相关配置
      server: # 设置服务的连接地址
        git: # 本次使用的是GIT作为仓库的管理，所以需要设置GIT的连接地址
          # 单仓库模式
          uri: https://github.com/wangwei1217-hbyc/microcloud-config.git
          # 多仓库模式：通过微服务的spring.application.name的值去动态匹配对应的仓库名称。
          #           匹配上存在对应的仓库即可检索对应仓库下的资源文件。
#          uri: https://github.com/wangwei1217-hbyc/{application}

          # 配置仓库目录匹配。不设置的话，默认根目录。
          # 当配置了仓库匹配目录后，SpringCloudConfig服务端除了可以检索到设置的目录下的资源文件外，
          # 还可以检索仓库根目录下的资源文件，但是仓库其他目录下的资源文件是检索不到的。
          # 可以设置多个目录。该属性为字符串数组
          search-paths:
          - microcloud-*
#          如果Git仓库为公开仓库，可以不填写用户名和密码，如果是私有仓库需要填写
#          username: xxxxxxx
#          password: xxxxxxx

eureka:
  client:  # 客户端进行Eureka注册的配置
    service-url:
      defaultZone: http://edmin:edmin@config-eureka-7901.com:7901/eureka
  instance:
    instance-id: config-server-bus-7201.com
    prefer-ip-address: true


# 一、密钥加密
#encrypt:
#  key: hellojava  #设置一个加密的访问密钥

#加密:curl -X POST http://root:root@config-server:7101/encrypt -d root
#解密：curl -X POST http://root:root@config-server:7101/decrypt -d 300697802386e27752a26ca50a344bef73fe4c5ef68725c759139d6f325813a3
#得到root加密后的密文后，在远端github上将资源文件中需替换的明文改为：
#'{cipher}300697802386e27752a26ca50a344bef73fe4c5ef68725c759139d6f325813a3' 即可
#
#测试访问：http://config-server:7101/master/microcloud-config-dept-client-dev.yml
#得到的是解密后的明文

#二、keystore加密(jks证书文件加密)
#生成证书jks文件：
#keytool -genkeypair -alias mytestkey -keyalg RSA -dname "CN=Web Server,OU=Unit,O=organization,L=City,S=State,C=US" -keypass changeit -keystore server.jks -storepass springcloud
#加密：curl -X POST http://root:root@config-server:7101/encrypt -d root
#加密结果：AQCtETXvLdFGxYklm2pll/HHAqvhRUTrgTOjL3dNbZCt85lFFgmvbQ+M7awLWCZbBshYQF94+dbvaRDBYxvOWoLnxkMWzRdGQHmb26enBvBTtfdHjsa0gKiiAbuXO8VIuWx5E5FN8sbePNfWebwaiWfWxmbv/RnbCly9XGscCxCY3yvH3FdqXK85PaW2pdqgwytFCXVBhz3JIC4G31YwujIQcoozh91EYk1xhNNudDjIqdpHlkU6aoHKOWTbBkPpKeQbWMYuSnrgbrubg41XQmTZjkHxtGFUGD1hfNNsvPH2ErL+KRoHvMSq8wUoXjnQcUhHbM0EIQshUkQzNNy495G/deiIXKP8ol079NAoYlIetLzF6OdBcxHzlOJCdK8T7ws=
#解密：curl -X POST http://root:root@config-server:7101/decrypt -d AQCtETXvLdFGxYklm2pll/HHAqvhRUTrgTOjL3dNbZCt85lFFgmvbQ+M7awLWCZbBshYQF94+dbvaRDBYxvOWoLnxkMWzRdGQHmb26enBvBTtfdHjsa0gKiiAbuXO8VIuWx5E5FN8sbePNfWebwaiWfWxmbv/RnbCly9XGscCxCY3yvH3FdqXK85PaW2pdqgwytFCXVBhz3JIC4G31YwujIQcoozh91EYk1xhNNudDjIqdpHlkU6aoHKOWTbBkPpKeQbWMYuSnrgbrubg41XQmTZjkHxtGFUGD1hfNNsvPH2ErL+KRoHvMSq8wUoXjnQcUhHbM0EIQshUkQzNNy495G/deiIXKP8ol079NAoYlIetLzF6OdBcxHzlOJCdK8T7ws=
#解密结果：root
#得到root加密后的密文后，在远端github上将资源文件中需替换的明文改为：
#'{cipher}AQCtETXvLdFGxYklm2pll/HHAqvhRUTrgTOjL3dNbZCt85lFFgmvbQ+M7awLWCZbBshYQF94+dbvaRDBYxvOWoLnxkMWzRdGQHmb26enBvBTtfdHjsa0gKiiAbuXO8VIuWx5E5FN8sbePNfWebwaiWfWxmbv/RnbCly9XGscCxCY3yvH3FdqXK85PaW2pdqgwytFCXVBhz3JIC4G31YwujIQcoozh91EYk1xhNNudDjIqdpHlkU6aoHKOWTbBkPpKeQbWMYuSnrgbrubg41XQmTZjkHxtGFUGD1hfNNsvPH2ErL+KRoHvMSq8wUoXjnQcUhHbM0EIQshUkQzNNy495G/deiIXKP8ol079NAoYlIetLzF6OdBcxHzlOJCdK8T7ws='
#
#测试访问：http://config-server:7101/master/microcloud-config-dept-client-beta.yml
#得到的是解密后的明文
encrypt:
  keyStore:
    location: classpath:/server.jks   # server.jks的配置文件的路径
    password: springcloud      # 设置store的密码
    alias: mytestkey
    secret: changeit      # keypass密码